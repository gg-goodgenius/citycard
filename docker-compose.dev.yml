version: '3.8'
services:
  pgsql:
    container_name: ${PROJECT_NAME}-pgsql
    image: postgres
    env_file:
      - ./apps/pgsql/.env
    volumes:
      - ./apps/pgsql/data:/data
    restart: unless-stopped
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ruha -d citycard" ]
      interval: 30s
      timeout: 30s
      retries: 3

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}-api
    container_name: ${PROJECT_NAME}-api
    env_file:
      - ./apps/api/.env
    volumes:
      - ./apps/api:/app
    ports:
      - 8080:8080
    healthcheck:
      test: curl http://api:8080/healthcheck || exit 1
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 10s
    depends_on:
      pgsql:
        condition: service_healthy

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}-web
    restart: on-failure
    container_name: ${PROJECT_NAME}-web
    ports:
      - "80:80"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80" ]
      interval: 10s
      timeout: 30s
      retries: 10
    depends_on:
      api:
        condition: service_healthy
