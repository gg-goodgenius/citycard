version: "3.8"
services:
  api-partner:
    build:
      context: ./apps/api/partner
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}-api-partner
    container_name: ${PROJECT_NAME}-api-partner
    env_file:
      - ./apps/api/partner/.env
    volumes:
      - ./apps/api:/app
    ports:
      - 8080:8080
    healthcheck:
      test: curl http://api:8080/healthcheck || exit 1
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 10s

  api-op:
    build:
      context: ./apps/api/op
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}-api-op
    container_name: ${PROJECT_NAME}-api-op
    env_file:
      - ./apps/api/op/.env
    volumes:
      - ./apps/api:/app
    ports:
      - 8081:9000
    healthcheck:
      test: curl http://api:8081/healthcheck || exit 1
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 10s

  web-op:
    build:
      context: ./apps/web/op
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}-web-op
    restart: on-failure
    container_name: ${PROJECT_NAME}-web-op
    ports:
      - "82:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 30s
      retries: 10
    depends_on:
      api-op:
        condition: service_healthy

  web-partner:
    build:
      context: ./apps/web/partner
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}-web-partner
    restart: on-failure
    container_name: ${PROJECT_NAME}-web-partner
    ports:
      - "81:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 30s
      retries: 10
    depends_on:
      api-partner:
        condition: service_healthy
