version: "3.8"
services:
  pgsql:
    container_name: pgsql
    image: postgres:15
    env_file:
      - ./apps/pgsql/.env
    volumes:
      - ./apps/pgsql/data:/data
    restart: unless-stopped
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ruha -d citycard"]
      interval: 30s
      timeout: 30s
      retries: 3

  # api-partner:
  #   build:
  #     context: ./apps/api/partner
  #     dockerfile: Dockerfile
  #   image: api-partner
  #   container_name: api-partner
  #   env_file:
  #     - ./apps/api/partner/.env
  #   volumes:
  #     - ./apps/api/partner:/app
  #   ports:
  #     - 8080:8080
  #   healthcheck:
  #     test: curl http://api-partner:8080/healthcheck || exit 1
  #     interval: 30s
  #     timeout: 30s
  #     retries: 5
  #     start_period: 10s

  api-op:
    build:
      context: ./apps/api/op
      dockerfile: Dockerfile
    image: api-op
    container_name: api-op
    env_file:
      - ./apps/api/op/.env
    volumes:
      - ./apps/api/op:/app
    ports:
      - 9000:9000
    healthcheck:
      test: curl http://api-op:9000/healthcheck || exit 1
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 10s

  web-op:
    build:
      context: ./apps/web/op
      dockerfile: Dockerfile
    image: web-op
    restart: on-failure
    container_name: web-op
    ports:
      - "82:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 30s
      retries: 10
    depends_on:
      api-op:
        condition: service_healthy

  web-partner:
    build:
      context: ./apps/web/partner
      dockerfile: Dockerfile
    image: web-partner
    restart: on-failure
    container_name: web-partner
    ports:
      - "81:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 30s
      retries: 10

  nginx:
    container_name: nginx
    image: nginx:1.23-alpine
    restart: unless-stopped
    volumes:
      - ./apps/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./apps/nginx/www:/www
      - ./apps/nginx/conf.d:/etc/nginx/conf.d
      # - ./apps/nginx/conf.nossl.d/:/etc/nginx/conf.d/
      - ./apps/certbot/conf:/etc/letsencrypt
      - ./apps/certbot/www:/var/www/certbot
      - ./apps/media/:/www/media/
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"' && sed -e '/^http {/,/^}/{/^}/i\\client_max_body_size 0;' -e '}' /etc/nginx/nginx.conf"
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 30s
      retries: 10

  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    volumes:
      - ./apps/certbot/conf:/etc/letsencrypt
      - ./apps/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 5d & wait $${!}; done;'"
    depends_on:
      nginx:
        condition: service_healthy
